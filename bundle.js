!function(){"use strict";function e(e,t,o,n,r="hard1"){if(n<=0)return!1;let a=[];for(let o=0;o<ROWS;o++)for(let n=0;n<COLS;n++)if(e[o][n]&&e[o][n].player===t){calculateLegalMovesForState(e,o,n).forEach((e=>{a.push({start:{row:o,col:n},end:{row:e.row,col:e.col},isSwap:!!e.isSwap})}))}if(0===a.length)return!0;for(const l of a){const a=cloneBoard(e),{start:c,end:i}=l,s=a[c.row][c.col],d=a[i.row][i.col];if(d?(a[i.row][i.col]={...s,state:SWAPPED},a[c.row][c.col]={...d,state:SWAPPED}):(a[i.row][i.col]={...s},a[c.row][c.col]=null,unmarkPlayerSwapped(t,a)),!allowsOpponentWin(a,o,n,r))return!1}return!0}window.ROWS=8,window.COLS=4,window.PLAYER_A="A",window.PLAYER_B="B",window.NORMAL="normal",window.SWAPPED="swapped",window.NUM_DIRECTIONS=8,window.JS_DIRECTIONS=[{dr:-1,dc:-1},{dr:-1,dc:0},{dr:-1,dc:1},{dr:0,dc:-1},{dr:0,dc:1},{dr:1,dc:-1},{dr:1,dc:0},{dr:1,dc:1}],window.initialPosition=["BBBB\nBBBB\n....\n....\n....\n....\nAAAA\nAAAA","....\n....\nBBBB\nBBBB\nAAAA\nAAAA\n....\n....","BB..\nBB..\nBB..\nBB..\n..AA\n..AA\n..AA\n..AA","B...\nBB..\nBB..\nBBB.\n.AAA\n..AA\n..AA\n...A","B..B\n.BB.\n.BB.\nB..B\nA..A\n.AA.\n.AA.\nA..A","....\n....\nBABA\nABAB\nBABA\nABAB\n....\n...."],window.parseStartingPosition=function(e){const t=Array(ROWS).fill(null).map((()=>Array(COLS).fill(null))),o=e.split("\n");for(let e=0;e<ROWS;e++)for(let n=0;n<COLS;n++){const r=o[e][n];"A"===r?t[e][n]={player:PLAYER_A,state:NORMAL}:"B"===r?t[e][n]={player:PLAYER_B,state:NORMAL}:"a"===r?t[e][n]={player:PLAYER_A,state:SWAPPED}:"b"===r&&(t[e][n]={player:PLAYER_B,state:SWAPPED})}return t},window.cloneBoard=function(e){return"function"==typeof structuredClone?structuredClone(e):JSON.parse(JSON.stringify(e))},window.serializeBoardState=function(e){return e.map((e=>e.map((e=>e?`${e.player}${e.state===NORMAL?"N":"S"}`:"_")).join(""))).join("|")},window.boardToKey=function(e){return e.map((e=>e.map((e=>e?`${e.player}${e.state[0]}`:"_")).join(""))).join("|")},window.convertBoardToBinaryJS=function(e){let t=0,o=0,n=0,r=0,a=0;for(let l=0;l<ROWS;l++)for(let c=0;c<COLS;c++){const i=l*COLS+c,s=e[l][c];null===s?t|=1<<i:s.player===PLAYER_A?s.state===NORMAL?o|=1<<i:n|=1<<i:s.player===PLAYER_B&&(s.state===NORMAL?r|=1<<i:a|=1<<i)}return[t>>>0,o>>>0,n>>>0,r>>>0,a>>>0]},window.getPieceImage=function(e,t){return`images/${e===PLAYER_A?"white":"black"}_${t===NORMAL?"normal":"swapped"}.png`},window.renderBoard=function({board:e,selectedPiece:t,legalMoves:o,gameOver:n,winner:r,winPath:a,moveHistory:l,currentHistoryIndex:c,playerAScore:i,playerBScore:s,boardElement:d,currentPlayer:u,showWinPath:w}){d.innerHTML="",d.classList.remove("game-over");for(let l=0;l<ROWS;l++)for(let c=0;c<COLS;c++){const i=document.createElement("div");i.classList.add("cell"),i.dataset.row=l,i.dataset.col=c,i.classList.add((l+c)%2==0?"light":"dark");const s=e[l][c];if(s){const e=document.createElement("img");e.classList.add("piece"),e.src=getPieceImage(s.player,s.state),e.alt=`Player ${s.player} ${s.state}`,i.appendChild(e)}t&&t.row===l&&t.col===c&&i.classList.add("selected"),o&&o.some((e=>e.row===l&&e.col===c))&&(i.classList.add("legal-move"),e[l][c]&&e[l][c].player!==u&&i.classList.add("swap-target")),w&&n&&r&&a&&a.some((e=>e.row===l&&e.col===c))&&i.classList.add("win-path"),d.appendChild(i)}if(n){if(d.classList.add("game-over"),void 0!==c){const e=document.createElement("div");e.classList.add("move-counter"),e.textContent=c===l.length?"Final Position":`Move ${c} of ${l.length}`,d.appendChild(e)}const e=document.createElement("div");e.classList.add("score-display"),e.innerHTML=`\n            <div id="score-a">Player A: ${i}</div>\n            <div id="score-b">Player B: ${s}</div>\n        `,d.appendChild(e)}},window.getBoardElement=function(){return document.getElementById("game-board")},window.getScoreElements=function(){return{controlScoreA:document.getElementById("control-score-a"),controlScoreB:document.getElementById("control-score-b"),scoreA:document.getElementById("score-a"),scoreB:document.getElementById("score-b")}},window.selectPiece=function(e,t,o,n){return{selectedPiece:{row:e,col:t},legalMoves:calculateLegalMoves(e,t,o,n)}},window.deselectPiece=function(){return{selectedPiece:null,legalMoves:[]}},window.calculateLegalMoves=function(e,t,o,n){const r=[],a=o[e][t];if(!a)return r;const l=a.player===PLAYER_A?PLAYER_B:PLAYER_A;for(let n=-1;n<=1;n++)for(let a=-1;a<=1;a++){if(0===n&&0===a)continue;const c=e+n,i=t+a;if(c>=0&&c<ROWS&&i>=0&&i<COLS){const e=o[c][i];null===e?r.push({row:c,col:i}):e.player===l&&e.state===NORMAL&&r.push({row:c,col:i,isSwap:!0})}}return r},window.makeMove=function(e,t,o,n,r,a,l,c){if(!a||e!==a.row||t!==a.col)throw new Error("Move error: Invalid start piece.");if(!l.find((e=>e.row===o&&e.col===n)))throw new Error("Move error: Invalid target cell.");const i=r[e][t],s=r[o][n];return null===s?(r[o][n]=i,r[e][t]=null,unmarkPlayerSwapped(c,r)):(r[o][n]={...i,state:SWAPPED},r[e][t]={...s,state:SWAPPED}),r},window.unmarkPlayerSwapped=function(e,t){for(let e=0;e<ROWS;e++)for(let o=0;o<COLS;o++)t[e][o]&&t[e][o].state===SWAPPED&&(t[e][o].state=NORMAL)},window.switchPlayer=function(e){return e===PLAYER_A?PLAYER_B:PLAYER_A},window.checkWinCondition=function(e,t){const o=t===PLAYER_A?[ROWS-2,ROWS-1]:[0,1],n=t===PLAYER_A?[0,1]:[ROWS-2,ROWS-1],r=Array(ROWS).fill(null).map((()=>Array(COLS).fill(!1))),a=[];for(const n of o)for(let o=0;o<COLS;o++)e[n]&&e[n][o]&&e[n][o].player===t&&(a.push({row:n,col:o,path:[{row:n,col:o}]}),r[n][o]=!0);for(;a.length>0;){const o=a.shift(),{row:l,col:c,path:i}=o;if(n.includes(l))return{win:!0,path:i};for(let o=-1;o<=1;o++)for(let n=-1;n<=1;n++){if(0===o&&0===n)continue;const s=l+o,d=c+n;if(s>=0&&s<ROWS&&d>=0&&d<COLS&&!r[s][d]&&e[s]&&e[s][d]&&e[s][d].player===t){r[s][d]=!0;const e=[...i,{row:s,col:d}];a.push({row:s,col:d,path:e})}}}return{win:!1,path:[]}},window.boardToNNInput=function(e,t=PLAYER_B){const o=ROWS*COLS,n=6*o,r=new Float32Array(n);for(let e=0;e<n;e++)r[e]=0;for(let t=0;t<ROWS;t++)for(let n=0;n<COLS;n++){const a=t*COLS+n,l=e[t][n];l?l.player===PLAYER_A?l.state===NORMAL?r[a]=1:r[o+a]=1:l.state===NORMAL?r[2*o+a]=1:r[3*o+a]=1:r[4*o+a]=1}const a=t===PLAYER_A?0:1;for(let e=0;e<o;e++)r[5*o+e]=a;return r},window.neuralNetworkPredict=async function(e,t){if(!e)throw new Error("TensorFlow model not loaded");if(!t||192!==t.length)throw new Error(`Invalid NN input: expected 192 elements, got ${t?.length}`);let o,n;try{o=tf.tensor2d([t]);const r=e.inputs[0].name;if(n=e.execute({[r]:o}),n.length<2)throw new Error(`Expected 2 output tensors (value, policy), got ${n.length}`);const a=n[0],l=n[1],c=l.shape,i=a.shape;256!==c[1]&&console.error(`ERROR: Policy tensor has wrong shape [${c}], expected [1, 256]`),1!==i[1]&&console.error(`ERROR: Value tensor has wrong shape [${i}], expected [1, 1]`);const s=a.arraySync(),d=l.arraySync(),u=s[0][0],w=d[0];return o.dispose(),n.forEach((e=>e.dispose())),{value:u,policy:w}}catch(e){throw o&&!o.isDisposed&&o.dispose(),n&&n.forEach((e=>{e&&!e.isDisposed&&e.dispose()})),e}},window.initializeMCTS=function(MCTSSearch,SwitcharooGameLogic,e){if(void 0!==MCTSSearch&&void 0!==SwitcharooGameLogic){const t=new SwitcharooGameLogic({ROWS:ROWS,COLS:COLS,PLAYER_A:PLAYER_A,PLAYER_B:PLAYER_B,NORMAL:NORMAL,SWAPPED:SWAPPED,NUM_DIRECTIONS:NUM_DIRECTIONS,JS_DIRECTIONS:JS_DIRECTIONS});return{mctsSearch:new MCTSSearch({numSimulations:e.MCTS_SIMULATIONS,cPuct:e.MCTS_PUCT_CONSTANT,temperature:e.MCTS_TEMPERATURE,dirichletAlpha:e.MCTS_DIRICHLET_ALPHA,dirichletEpsilon:e.MCTS_DIRICHLET_EPSILON,enabled:e.MCTS_ENABLED,verbose:e.MCTS_VERBOSE,logSearchStats:!0}),gameLogic:t}}return{mctsSearch:null,gameLogic:null}},window.showOverlay=function(e){e&&e.classList.add("active")},window.hideOverlay=function(e){e&&e.classList.remove("active")},window.hideAllOverlays=function(){document.querySelectorAll(".overlay").forEach((e=>e.classList.remove("active")))},window.moveToActionIndex=function(e){const t=e.start.row*COLS+e.start.col,o=e.end.row-e.start.row,n=e.end.col-e.start.col;let r=-1;for(let e=0;e<JS_DIRECTIONS.length;e++)if(JS_DIRECTIONS[e].dr===o&&JS_DIRECTIONS[e].dc===n){r=e;break}if(-1===r)return console.error("Could not find direction for move:",JSON.stringify(e)),null;const a=t*NUM_DIRECTIONS+r;return a<0||a>=256?(console.error(`INVALID ACTION INDEX: ${a} for move (${e.start.row},${e.start.col}) â†’ (${e.end.row},${e.end.col})`),console.error(`  Details: startCell=${t}, direction=${r}, dr=${o}, dc=${n}`),null):a},window.calculateLegalMovesForState=function(e,t,o){const n=[],r=e[t][o];if(!r)return n;for(const a of JS_DIRECTIONS){const l=t+a.dr,c=o+a.dc;if(l>=0&&l<ROWS&&c>=0&&c<COLS){const t=e[l][c];t?t.player!==r.player&&t.state===NORMAL&&n.push({row:l,col:c,isSwap:!0}):n.push({row:l,col:c,isSwap:!1})}}return n},window.canWinInOneMove=function(e,t){for(let o=0;o<ROWS;o++)for(let n=0;n<COLS;n++)if(e[o][n]&&e[o][n].player===t){const r=calculateLegalMovesForState(e,o,n);for(const a of r){const r=cloneBoard(e),l=r[o][n],c=r[a.row][a.col];c?(r[a.row][a.col]={...l,state:SWAPPED},r[o][n]={...c,state:SWAPPED}):(r[a.row][a.col]={...l},r[o][n]=null,unmarkPlayerSwapped(t,r));const i=checkWinCondition(r,t);if(i.win)return{canWin:!0,winningMove:{start:{row:o,col:n},end:{row:a.row,col:a.col},isSwap:!!c},winResult:i}}}return{canWin:!1}},window.allowsOpponentWin=function(t,o,n=1,r="hard1"){if(n<=0)return!1;if(canWinInOneMove(t,o).canWin)return!0;if("easy"===r){if(n>1){o===PLAYER_A?PLAYER_B:PLAYER_A;let e=[];for(let n=0;n<ROWS;n++)for(let r=0;r<COLS;r++)if(t[n][r]&&t[n][r].player===o){calculateLegalMovesForState(t,n,r).forEach((t=>{e.push({start:{row:n,col:r},end:{row:t.row,col:t.col},isSwap:!!t.isSwap})}))}for(const n of e){const e=cloneBoard(t),{start:r,end:a}=n,l=e[r.row][r.col],c=e[a.row][a.col];c?(e[a.row][a.col]={...l,state:SWAPPED},e[r.row][r.col]={...c,state:SWAPPED}):(e[a.row][a.col]={...l},e[r.row][r.col]=null,unmarkPlayerSwapped(o,e));if(checkWinCondition(e,o).win)return!0}}return!1}if(n>1&&("hard1"===r||"hard_ai"===r)){const a=o===PLAYER_A?PLAYER_B:PLAYER_A;let l=[];for(let e=0;e<ROWS;e++)for(let n=0;n<COLS;n++)if(t[e][n]&&t[e][n].player===o){calculateLegalMovesForState(t,e,n).forEach((t=>{l.push({start:{row:e,col:n},end:{row:t.row,col:t.col},isSwap:!!t.isSwap})}))}for(const c of l){const l=cloneBoard(t),{start:i,end:s}=c,d=l[i.row][i.col],u=l[s.row][s.col];u?(l[s.row][s.col]={...d,state:SWAPPED},l[i.row][i.col]={...u,state:SWAPPED}):(l[s.row][s.col]={...d},l[i.row][i.col]=null,unmarkPlayerSwapped(o,l));if(checkWinCondition(l,o).win)return!0;if(e(l,a,o,n-1,r))return!0}}return!1},window.evaluateBoardState=function(e,t,o=null){let n=0;for(let o=0;o<ROWS;o++)for(let r=0;r<COLS;r++){const a=e[o][r];if(a&&a.player===t){t===PLAYER_B?n+=10*(ROWS-o):n+=10*o;const a=Math.abs(r-Math.floor(COLS/2));n+=5*Math.max(0,3-a),n+=3*countFriendlyNeighbors(e,o,r,t)}}return n},window.countFriendlyNeighbors=function(e,t,o,n){let r=0;for(const a of JS_DIRECTIONS){const l=t+a.dr,c=o+a.dc;if(l>=0&&l<ROWS&&c>=0&&c<COLS){const t=e[l][c];t&&t.player===n&&r++}}return r},window.checkWinConditionForState=function(e,t){return checkWinCondition(e,t)},window.findBestAIMove=async function e(t,o=PLAYER_B,n="hard_ai",r=1,a=!1,l=!1,c=50,i=null,s=null,d=null){let u=[];for(let e=0;e<ROWS;e++)for(let n=0;n<COLS;n++)if(t[e][n]&&t[e][n].player===o){calculateLegalMovesForState(t,e,n).forEach((t=>{u.push({start:{row:e,col:n},end:{row:t.row,col:t.col},isSwap:!!t.isSwap})}))}if(0===u.length)return null;for(const e of u){const n=cloneBoard(t),{start:r,end:l}=e,c=n[r.row][r.col],i=n[l.row][l.col];if(i?(n[l.row][l.col]={...c,state:SWAPPED},n[r.row][r.col]={...i,state:SWAPPED}):(n[l.row][l.col]={...c},n[r.row][r.col]=null,unmarkPlayerSwapped(o,n)),checkWinConditionForState(n,o).win)return a,e}if("hard_ai"===n){if(!i)return console.warn("Neural network model not available. Falling back to heuristic AI (hard1)."),await e(t,o,"hard1",r,a,l,c,i,s,d);if(l&&s&&d)try{const e=async e=>await neuralNetworkPredict(i,e),l=await s.search(t,o,e,d),c=[];for(let e=0;e<ROWS;e++)for(let n=0;n<COLS;n++)if(t[e][n]&&t[e][n].player===o){calculateLegalMovesForState(t,e,n).forEach((t=>{c.push({start:{row:e,col:n},end:{row:t.row,col:t.col},isSwap:!!t.isSwap})}))}if(c.length>0){const e=o===PLAYER_A?PLAYER_B:PLAYER_A,i=c.filter((a=>{const l=cloneBoard(t),{start:c,end:i}=a,s=l[c.row][c.col],d=l[i.row][i.col];return d?(l[i.row][i.col]={...s,state:SWAPPED},l[c.row][c.col]={...d,state:SWAPPED}):(l[i.row][i.col]={...s},l[c.row][c.col]=null,unmarkPlayerSwapped(o,l)),!allowsOpponentWin(l,e,r,n)}));let s=null,d=-1;const u=i.length>0?i:c;for(const e of u){const t=moveToActionIndex(e);if(null!==t&&t>=0&&t<l.length){const o=l[t];o>d&&(d=o,s=e)}}if(s&&a&&0===i.length&&console.warn("All MCTS moves allow opponent win; forced to pick among losing moves."),s)return s}}catch(e){console.error("Error during MCTS move selection:",e)}let w=null,f=-1/0;for(const e of u){const n=cloneBoard(t),{start:r,end:a}=e,l=n[r.row][r.col],c=n[a.row][a.col];c?(n[a.row][a.col]={...l,state:SWAPPED},n[r.row][r.col]={...c,state:SWAPPED}):(n[a.row][a.col]={...l},n[r.row][r.col]=null,unmarkPlayerSwapped(o,n));const i=evaluateBoardState(n,o);i>f&&(f=i,w=e)}return w&&a,w}if("hard1"===n){let e=null,n=-1/0,r=[],l=[];for(const a of u){const c=cloneBoard(t),{start:i,end:s}=a,d=c[i.row][i.col],u=c[s.row][s.col];u?(c[s.row][s.col]={...d,state:SWAPPED},c[i.row][i.col]={...u,state:SWAPPED}):(c[s.row][s.col]={...d},c[i.row][i.col]=null,unmarkPlayerSwapped(o,c));const w=evaluateBoardState(c,o);l.push({move:a,score:w});allowsOpponentWin(c,o===PLAYER_A?PLAYER_B:PLAYER_A,1,"easy")||(r.push({move:a,score:w}),w>n&&(n=w,e=a))}return a,0===r.length&&l.length>0&&(l.sort(((e,t)=>t.score-e.score)),e=l[0].move,n=l[0].score),e}if("easy"===n){let e=[];const n=o===PLAYER_A?PLAYER_B:PLAYER_A;for(const r of u){const a=cloneBoard(t),{start:l,end:c}=r,i=a[l.row][l.col],s=a[c.row][c.col];s?(a[c.row][c.col]={...i,state:SWAPPED},a[l.row][l.col]={...s,state:SWAPPED}):(a[c.row][c.col]={...i},a[l.row][l.col]=null,unmarkPlayerSwapped(o,a)),allowsOpponentWin(a,n,1,"easy")||e.push(r)}a;const r=e.length>0?e:u,l=r[Math.floor(Math.random()*r.length)];return l&&a,l}return null};const t="\n....\n.BA.\n.B.B\nBAaB\nAAbB\nA..A\nB.A.\n....".trim();function o(e){for(let t=0;t<ROWS;t++){let o=`${t}: `;for(let n=0;n<COLS;n++){const r=e[t][n];if(r){const e=r.player===PLAYER_A?"A":"B";o+=(r.state===NORMAL?e:e.toLowerCase())+" "}else o+=". "}}}window.runBoardPositionTest=async function(){if("undefined"!=typeof window&&"undefined"!=typeof tf){let e=0;for(;!window.tfModel&&e<100;)await new Promise((e=>setTimeout(e,100))),e++;window.tfModel}const e=parseStartingPosition(t);o(e);const n=checkWinCondition(e,PLAYER_A),r=checkWinCondition(e,PLAYER_B);if(n.win||r.win)return console.error("ERROR: Game already over in initial position!"),!1;!function(e){const t=cloneBoard(e),n=t[1][1];if(!n)return null;const r=t[1][2];if(r)t[1][2]={...n,state:SWAPPED},t[1][1]={...r,state:SWAPPED};else{t[1][2]={...n},t[1][1]=null;for(let e=0;e<ROWS;e++)for(let o=0;o<COLS;o++)t[e][o]&&t[e][o].state===SWAPPED&&(t[e][o].state=NORMAL)}o(t);const a=canWinInOneMove(t,PLAYER_A);if(a.canWin)return t;const l=cloneBoard(t),c=l[3][1];if(c&&c.player===PLAYER_A){const e=l[2][1];if(e)l[2][1]={...c,state:SWAPPED},l[3][1]={...e,state:SWAPPED};else{l[2][1]={...c},l[3][1]=null;for(let e=0;e<ROWS;e++)for(let t=0;t<COLS;t++)l[e][t]&&l[e][t].state===SWAPPED&&(l[e][t].state=NORMAL)}o(l);canWinInOneMove(l,PLAYER_A);let t=!1,n=0,r=0;for(let e=0;e<ROWS;e++)for(let o=0;o<COLS;o++)if(l[e][o]&&l[e][o].player===PLAYER_B){const a=calculateLegalMovesForState?calculateLegalMovesForState(l,e,o):[];for(const c of a){r++;const a=cloneBoard(l),i=a[e][o],s=a[c.row][c.col];if(s)a[c.row][c.col]={...i,state:SWAPPED},a[e][o]={...s,state:SWAPPED};else{a[c.row][c.col]={...i},a[e][o]=null;for(let e=0;e<ROWS;e++)for(let t=0;t<COLS;t++)a[e][t]&&a[e][t].state===SWAPPED&&(a[e][t].state=NORMAL)}canWinInOneMove(a,PLAYER_A).canWin||(t=!0,n++)}}!t&&r>0||t}}(e);return await async function(e){const t=[];for(let o=0;o<ROWS;o++)for(let n=0;n<COLS;n++){const r=e[o][n];if(r&&r.player===PLAYER_B)for(let r=-1;r<=1;r++)for(let a=-1;a<=1;a++){if(0===r&&0===a)continue;const l=o+r,c=n+a;if(l>=0&&l<ROWS&&c>=0&&c<COLS){const r=e[l][c];r?r.player===PLAYER_A&&r.state===NORMAL&&t.push({start:{row:o,col:n},end:{row:l,col:c},type:"swap"}):t.push({start:{row:o,col:n},end:{row:l,col:c},type:"empty"})}}}t.slice(0,10).forEach(((e,t)=>{}));let o=0,n=0;for(let r=0;r<Math.min(t.length,15);r++){const a=t[r],l=cloneBoard(e),c=l[a.start.row][a.start.col],i=l[a.end.row][a.end.col];if("empty"===a.type){l[a.end.row][a.end.col]={...c},l[a.start.row][a.start.col]=null;for(let e=0;e<ROWS;e++)for(let t=0;t<COLS;t++)l[e][t]&&l[e][t].state===SWAPPED&&(l[e][t].state=NORMAL)}else l[a.end.row][a.end.col]={...c,state:SWAPPED},l[a.start.row][a.start.col]={...i,state:SWAPPED};canWinInOneMove(l,PLAYER_A).canWin?n++:o++}}(e),await async function(e){try{const t="undefined"!=typeof window&&"undefined"!=typeof tf,o=t?["easy","hard1","hard_ai"]:["easy","hard1"];!t;for(const n of o){"hard_ai"===n&&window.tfModel;const o=await findBestAIMove(e,PLAYER_B,n,2,!0,!1,50,t?window.tfModel:null,null,null);if(o){const t=cloneBoard(e),n=t[o.start.row][o.start.col],r=t[o.end.row][o.end.col];if(r)t[o.end.row][o.end.col]={...n,state:SWAPPED},t[o.start.row][o.start.col]={...r,state:SWAPPED};else{t[o.end.row][o.end.col]={...n},t[o.start.row][o.start.col]=null;for(let e=0;e<ROWS;e++)for(let o=0;o<COLS;o++)t[e][o]&&t[e][o].state===SWAPPED&&(t[e][o].state=NORMAL)}canWinInOneMove(t,PLAYER_A).canWin}}!t}catch(e){console.error("Error testing AI move selection:",e)}}(e),!0};let n,r=[],a=PLAYER_A,l=null,c=[],i=[],s=!1,d=null,u=[],w=0,f=0,A=null,m=0,y=!1,S=null,P="easy",E=!0,p=!1,h=50,v=.1,L=.25,g=!1,B=null,O=null;const R=new Map,M=document.getElementById("game-board"),I=document.getElementById("reset-btn"),C=document.getElementById("info-btn"),_=document.getElementById("history-btn"),W=document.getElementById("start-btn"),b=document.getElementById("info-overlay"),T=document.getElementById("history-overlay"),N=document.getElementById("win-overlay"),Y=document.getElementById("history-list"),k=document.getElementById("win-message"),D=document.querySelectorAll(".close-overlay-btn"),x=document.querySelectorAll(".overlay"),H=(document.getElementById("ai-spinner-overlay"),document.getElementById("mcts-btn")),$=document.getElementById("mcts-overlay");function F(){"undefined"!=typeof MCTSSearch&&"undefined"!=typeof SwitcharooGameLogic?(O=new SwitcharooGameLogic({ROWS:ROWS,COLS:COLS,PLAYER_A:PLAYER_A,PLAYER_B:PLAYER_B,NORMAL:NORMAL,SWAPPED:SWAPPED,NUM_DIRECTIONS:NUM_DIRECTIONS,JS_DIRECTIONS:JS_DIRECTIONS}),B=new MCTSSearch({numSimulations:h,cPuct:1,temperature:v,dirichletAlpha:.3,dirichletEpsilon:L,enabled:p,verbose:g,logSearchStats:!0}),window.mctsSearch=B,window.gameLogic=O,console.log("MCTS initialized with settings:",{numSimulations:h,cPuct:1,temperature:v,dirichletAlpha:.3,dirichletEpsilon:L,enabled:p,verbose:g})):(console.warn("MCTS classes not available - MCTS features disabled"),window.mctsSearch=null,window.gameLogic=null)}function j(){y,A=parseStartingPosition(initialPosition[m]),r=A.map((e=>e.map((e=>e?{...e}:null)))),a=PLAYER_A,l=null,c=[],i=[],s=!1,d=null,u=[],_.disabled=!0,renderBoard({board:r,selectedPiece:l,legalMoves:c,gameOver:s,winner:d,winPath:u,moveHistory:i,currentHistoryIndex:n,playerAScore:w,playerBScore:f,boardElement:M,currentPlayer:a}),hideAllOverlays(),R.clear()}function J(){const e=document.getElementById("control-score-a"),t=document.getElementById("control-score-b");e&&(e.textContent=`${w}`),t&&(t.textContent=`${f}`);const o=document.getElementById("score-a"),n=document.getElementById("score-b");o&&n&&(o.textContent=`Player A: ${w}`,n.textContent=`Player B: ${f}`)}function U(e){if(!s)return;void 0===n&&(n=i.length);const t=Math.max(0,Math.min(i.length,n+e));if(t!==n){if(n=t,n===i.length)ne({board:r,selectedPiece:l,legalMoves:c,gameOver:s,winner:d,winPath:u,moveHistory:i,currentHistoryIndex:n,playerAScore:w,playerBScore:f,boardElement:M,currentPlayer:a});else if(0===n){ne({board:A.map((e=>e.map((e=>e?{...e}:null)))),selectedPiece:null,legalMoves:[],gameOver:s,winner:d,winPath:u,moveHistory:i,currentHistoryIndex:n,playerAScore:w,playerBScore:f,boardElement:M,currentPlayer:a})}else ne({board:i[n-1].boardAfter,selectedPiece:null,legalMoves:[],gameOver:s,winner:d,winPath:u,moveHistory:i,currentHistoryIndex:n,playerAScore:w,playerBScore:f,boardElement:M,currentPlayer:a});z()}}function z(){if(!s)return;let e=document.querySelector(".move-counter");e||(e=document.createElement("div"),e.classList.add("move-counter"),M.appendChild(e)),e.textContent=void 0===n||n===i.length?"Final Position":`Move ${n} of ${i.length}`}function G(e,t,o,n,r){i.push({player:e,start:{...t},end:{...o},boardBefore:cloneBoard(n),boardAfter:cloneBoard(r)})}!async function(){if("undefined"!=typeof tf){const e=Object.keys(tf.engine().registryFactory);if(e.includes("webgl"))try{await tf.setBackend("webgl"),console.log("TensorFlow.js using WebGL backend for best performance")}catch(e){console.warn("WebGL backend failed, falling back to alternatives:",e)}else if(e.includes("wasm"))try{await tf.setBackend("wasm"),console.log("TensorFlow.js using WASM backend for improved CPU performance")}catch(e){console.warn("WASM backend failed, falling back to CPU:",e),await tf.setBackend("cpu"),console.log("TensorFlow.js using CPU backend")}else await tf.setBackend("cpu");await tf.ready()}else console.warn("tf object not available at the time of setting backend.")}(),document.addEventListener("DOMContentLoaded",(async()=>{F(),await new Promise((e=>setTimeout(e,500)));try{await async function(e=3e4){const t=Date.now();let o=0;for(;"undefined"==typeof tf;){if(o++,Date.now()-t>e)throw console.error(`TensorFlow.js failed to load within ${e}ms timeout after ${o} attempts`),new Error("TensorFlow.js failed to load within timeout");o%10==0,await new Promise((e=>setTimeout(e,200)))}return!0}();await async function(){try{if("undefined"==typeof tf)throw new Error("TensorFlow.js not available yet");let e;await tf.ready();try{e=await tf.loadGraphModel("./switcharoo_tfjs_model/model.json")}catch(e){throw console.error("Error during tf.loadGraphModel:",e),console.error("Model load error type:",e.constructor.name),console.error("Model load error message:",e.message),console.error("Model load error stack:",e.stack),e}S=e;try{const e=tf.zeros([1,192]),t=S.inputs[0].name,o=S.execute({[t]:e});e.dispose(),Array.isArray(o)?o.forEach((e=>e.dispose())):o.dispose()}catch(e){console.warn("Model test failed:",e),console.warn("Proceeding anyway as model loaded successfully")}return window.tfModel=S,!0}catch(e){return console.error("=== Model Loading Failed ==="),console.error("Could not load pre-trained graph model. Error object:",e),console.error("Error type:",e.constructor.name),console.error("Error message:",e.message),console.error("Error stack:",e.stack),console.warn("The Neural Network AI option will be disabled as it requires pre-trained weights to work properly."),S=null,window.tfModel=null,!1}}()}catch(e){console.warn("Failed to wait for TensorFlow.js or load model:",e),console.warn("Error details:",e.message,e.stack),window.tfModel=null}j()})),I.addEventListener("click",(()=>{m=0,j()})),C.addEventListener("click",(()=>showOverlay(b))),_.addEventListener("click",(()=>{_.disabled||(!function(){if(Y.innerHTML="",0===i.length)return Y.textContent="No moves made yet.",void 0;for(let e=i.length-1;e>=0;e--){const t=i[e],o=e+1,r=ROWS-t.start.row,l=ROWS-t.end.row,c=String.fromCharCode("A".charCodeAt(0)+t.start.col),A=String.fromCharCode("A".charCodeAt(0)+t.end.col),m=document.createElement("div");m.textContent=`${o}. Player ${t.player}: ${c}${r} â†’ ${A}${l}`,m.classList.add("history-move"),n===o&&m.classList.add("selected-move"),m.addEventListener("click",(()=>{n=o,t.boardAfter?ne({board:t.boardAfter,selectedPiece:null,legalMoves:[],gameOver:s,winner:d,winPath:u,moveHistory:i,currentHistoryIndex:n,playerAScore:w,playerBScore:f,boardElement:M,currentPlayer:a}):console.warn("No boardAfter for move",o),z(),hideOverlay(T)})),Y.appendChild(m)}const e=document.createElement("div");e.textContent="0. Initial State",e.classList.add("history-move"),0===n&&e.classList.add("selected-move"),e.addEventListener("click",(()=>{const e=A.map((e=>e.map((e=>e?{...e}:null))));n=0,ne({board:e,selectedPiece:null,legalMoves:[],gameOver:s,winner:d,winPath:u,moveHistory:i,currentHistoryIndex:n,playerAScore:w,playerBScore:f,boardElement:M,currentPlayer:a}),z(),hideOverlay(T)})),Y.insertBefore(e,Y.firstChild)}(),showOverlay(T))})),W.addEventListener("click",(()=>{m=(m+1)%initialPosition.length,j()})),D.forEach((e=>{e.addEventListener("click",(()=>{const t=e.getAttribute("data-overlay");hideOverlay(document.getElementById(t))}))})),x.forEach((e=>{e.addEventListener("click",(t=>{t.target===e&&hideOverlay(e)}))})),H&&$&&H.addEventListener("click",(()=>{showOverlay($)}));const q=document.getElementById("ai-difficulty-select");function V(){const e=document.querySelectorAll(".mcts-only");q&&"hard_ai"===q.value?(e.forEach((e=>e.style.display="")),p=!0):(e.forEach((e=>e.style.display="none")),p=!1),K()}function K(){const e=document.getElementById("mcts-enabled"),t=document.getElementById("mcts-simulations"),o=document.getElementById("mcts-simulations-value"),n=document.getElementById("mcts-temperature"),r=document.getElementById("mcts-temperature-value"),a=document.getElementById("mcts-verbose");e&&(e.checked=p),t&&(t.value=h),o&&(o.textContent=h),n&&(n.value=v),r&&(r.textContent=v.toFixed(2)),a&&(a.checked=g)}function X(){const e=document.getElementById("mcts-btn"),t=e?.querySelector("img");if(t)switch(q.value){case"easy":default:t.src="images/happy-outline.svg";break;case"hard1":t.src="images/hardware-chip-outline.svg";break;case"hard_ai":t.src="images/skull-outline.svg"}}async function Q(){if(s)return;const e=await findBestAIMove(r,PLAYER_B,P,1,!1,p,h,S,B,O);if(e){const t=cloneBoard(r);r=makeMove(e.start.row,e.start.col,e.end.row,e.end.col,r,e.start,[e.end],PLAYER_B),G(PLAYER_B,e.start,e.end,t,r);const o=checkWinCondition(r,PLAYER_A),A=checkWinCondition(r,PLAYER_B);o.win||A.win?(s=!0,d=o.win&&A.win?"both":o.win?PLAYER_A:PLAYER_B,u=o.win?o.path:A.path,d===PLAYER_A?w++:d===PLAYER_B&&f++,N&&k&&(k.textContent="both"===d?"Both players win simultaneously!":`Player ${d===PLAYER_A?"A":"B"} wins!`,showOverlay(N)),_&&(_.disabled=!1)):a=switchPlayer(a),ne({board:r,selectedPiece:l,legalMoves:c,gameOver:s,winner:d,winPath:u,moveHistory:i,currentHistoryIndex:n,playerAScore:w,playerBScore:f,boardElement:M,currentPlayer:a}),J()}else a=switchPlayer(a),ne({board:r,selectedPiece:l,legalMoves:c,gameOver:s,winner:d,winPath:u,moveHistory:i,currentHistoryIndex:n,playerAScore:w,playerBScore:f,boardElement:M,currentPlayer:a}),J()}q&&(q.addEventListener("change",(()=>{P=q.value,V()})),V()),document.addEventListener("DOMContentLoaded",(()=>{!function(){const e=document.getElementById("mcts-simulations"),t=document.getElementById("mcts-simulations-value"),o=document.getElementById("mcts-temperature"),n=document.getElementById("mcts-temperature-value"),r=document.getElementById("mcts-enabled"),a=document.getElementById("mcts-verbose"),l=document.getElementById("mcts-reset-defaults");e&&t&&e.addEventListener("input",(e=>{const o=parseInt(e.target.value);h=Math.max(1,Math.min(200,o)),t.textContent=h,B&&B.setNumSimulations(h)})),o&&n&&o.addEventListener("input",(e=>{const t=parseFloat(e.target.value);v=Math.max(0,Math.min(2,t)),n.textContent=v.toFixed(2),B&&B.setTemperature(v)})),r&&r.addEventListener("change",(e=>{q&&"hard_ai"===q.value?(p=e.target.checked,B&&B.setEnabled(p)):(e.target.checked=!1,p=!1)})),a&&a.addEventListener("change",(e=>{g=e.target.checked,B&&(B.verbose=g)})),l&&l.addEventListener("click",(()=>{p=!0,h=50,v=.1,g=!1,K(),F()}))}(),K()})),q&&(q.addEventListener("change",X),X()),M&&M.addEventListener("click",(e=>{const t=e.target.closest(".cell");if(!t)return;const o=parseInt(t.dataset.row,10),A=parseInt(t.dataset.col,10);if(!isNaN(o)&&!isNaN(A)&&!s&&a!==PLAYER_B)if(l)if(c.some((e=>e.row===o&&e.col===A))){const e=cloneBoard(r);r=makeMove(l.row,l.col,o,A,r,l,c,a),G(a,l,{row:o,col:A},e,r),l=null,c=[];const t=checkWinCondition(r,PLAYER_A),m=checkWinCondition(r,PLAYER_B);t.win||m.win?(s=!0,d=t.win&&m.win?"both":t.win?PLAYER_A:PLAYER_B,u=t.win?t.path:m.path,d===PLAYER_A?w++:d===PLAYER_B&&f++,N&&k&&(k.textContent="both"===d?"Both players win simultaneously!":`Player ${d===PLAYER_A?"A":"B"} wins!`,showOverlay(N)),_&&(_.disabled=!1)):(a=switchPlayer(a),a===PLAYER_B&&setTimeout(Q,100)),ne({board:r,selectedPiece:l,legalMoves:c,gameOver:s,winner:d,winPath:u,moveHistory:i,currentHistoryIndex:n,playerAScore:w,playerBScore:f,boardElement:M,currentPlayer:a}),J()}else o===l.row&&A===l.col?(l=null,c=[],ne({board:r,selectedPiece:l,legalMoves:c,gameOver:s,winner:d,winPath:u,moveHistory:i,currentHistoryIndex:n,playerAScore:w,playerBScore:f,boardElement:M,currentPlayer:a})):r[o][A]&&r[o][A].player===a?(l={row:o,col:A},c=calculateLegalMoves(o,A,r,a),ne({board:r,selectedPiece:l,legalMoves:c,gameOver:s,winner:d,winPath:u,moveHistory:i,currentHistoryIndex:n,playerAScore:w,playerBScore:f,boardElement:M,currentPlayer:a})):(l=null,c=[],ne({board:r,selectedPiece:l,legalMoves:c,gameOver:s,winner:d,winPath:u,moveHistory:i,currentHistoryIndex:n,playerAScore:w,playerBScore:f,boardElement:M,currentPlayer:a}));else r[o][A]&&r[o][A].player===a&&(l={row:o,col:A},c=calculateLegalMoves(o,A,r,a),ne({board:r,selectedPiece:l,legalMoves:c,gameOver:s,winner:d,winPath:u,moveHistory:i,currentHistoryIndex:n,playerAScore:w,playerBScore:f,boardElement:M,currentPlayer:a}))})),M.addEventListener("wheel",(e=>{if(!s)return;e.preventDefault();U(e.deltaY>0?-1:1)}));let Z=null;M.addEventListener("touchstart",(e=>{s&&1===e.touches.length&&(Z=e.touches[0].clientY)})),M.addEventListener("touchend",(e=>{if(!s||null===Z)return;const t=e.changedTouches[0].clientY-Z;if(Math.abs(t)>30){U(t<0?1:-1)}Z=null}));var ee=!0,te=console.log;console.log=function(){ee,te.apply(this,arguments)};var oe=console.warn;function ne(e){renderBoard({...e,showWinPath:void 0===n||n===i.length,boardElement:M})}async function re(){if(void 0!==n&&n>0){const e=i[n-1].boardAfter,t=i[n-1].player===PLAYER_A?PLAYER_B:PLAYER_A;E=!0;await findBestAIMove(e,t,P,1,!0,p,h,S,B,O);E=!1}}console.warn=function(){ee,oe.apply(this,arguments)},window.SwitcharooGlobals={board:r,currentPlayer:a,selectedPiece:l,legalMoves:c,moveHistory:i,gameOver:s,winner:d,winPath:u,playerAScore:w,playerBScore:f,currentHistoryIndex:n,startingPosition:A,startingPositionIndex:m,isInSelfPlay:y,selfPlayTimeoutId:null,tfModel:S,AI_DIFFICULTY:P,AI_DEPTH:1,ANALYSIS_MODE:E,MCTS_ENABLED:p,MCTS_SIMULATIONS:h,MCTS_TEMPERATURE:v,MCTS_PUCT_CONSTANT:1,MCTS_DIRICHLET_ALPHA:.3,MCTS_DIRICHLET_EPSILON:L,MCTS_VERBOSE:g,mctsSearch:B,gameLogic:O,transpositionTable:R,parseStartingPosition:parseStartingPosition,cloneBoard:cloneBoard,serializeBoardState:serializeBoardState,boardToKey:boardToKey,convertBoardToBinaryJS:convertBoardToBinaryJS,renderBoard:renderBoard,getPieceImage:getPieceImage,selectPiece:selectPiece,deselectPiece:deselectPiece,calculateLegalMoves:calculateLegalMoves,makeMove:makeMove,unmarkPlayerSwapped:unmarkPlayerSwapped,switchPlayer:switchPlayer,checkWinCondition:checkWinCondition,boardToNNInput:boardToNNInput,neuralNetworkPredict:neuralNetworkPredict,initializeMCTS:F,showOverlay:showOverlay,hideOverlay:hideOverlay,hideAllOverlays:hideAllOverlays,initGame:j,findBestAIMove:findBestAIMove,moveToActionIndex:moveToActionIndex,calculateLegalMovesForState:calculateLegalMovesForState,allowsOpponentWin:allowsOpponentWin,evaluateBoardState:evaluateBoardState,countFriendlyNeighbors:countFriendlyNeighbors,checkWinConditionForState:checkWinConditionForState,analyzeHistoricalMove:re},window.analyzeHistoricalMove=re}();